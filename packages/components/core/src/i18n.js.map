{"version":3,"file":"i18n.js","sourceRoot":"","sources":["../../../../core/src/i18n.ts"],"names":[],"mappings":"AACA,OAAO,OAAO,MAAM,SAAS,CAAC;AA8B9B,MAAM,OAAO,cAAc;IAI1B,gBAAuB,CAAC;IAEjB,MAAM,CAAC,KAAK,CAAC,cAAc,CACjC,GAAkC,EAClC,YAGiF;QAEjF,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC;YACjC,YAAY,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC;aAAM,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE,CAAC;YAC/C,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACxC,CAAC;QAED,cAAc,CAAC,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;QAE/C,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YAC5B,MAAM,OAAO,CAAC,IAAI,CAAC;gBAClB,EAAE,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC;gBAC9B,GAAG;aACH,CAAC,CAAC;QACJ,CAAC;aAAM,CAAC;YACP,MAAM,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACxD,CAAC;QAED,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;YAChC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACV,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChD,OAAO,CAAC,CAAC;YACV,CAAC,CAAC,CACF,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,GAAkC,EAAE,cAAgD;QACnH,OAAO,CAAC,iBAAiB,CAAC,GAAG,EAAE,cAAc,CAAC,SAAS,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;IAChF,CAAC;IAEM,iBAAiB,CAAC,GAAkC,EAAE,cAAgD;QAC5G,cAAc,CAAC,iBAAiB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IACvD,CAAC;IAEM,SAAS,CAAC,GAAW,EAAE,OAA6B;QAC1D,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,kBACnB,EAAE,EAAE,cAAc,CAAC,SAAS,EAC5B,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,IAClB,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,EACvB,CAAC;IACJ,CAAC;;AAtDc,wBAAS,GAAG,SAAS,CAAC","sourcesContent":["import type { Generic } from 'adopted-style-sheets';\nimport i18next from 'i18next';\n\ninterface ITranslationOptions {\n\t/**\n\t * The number of items to determine an counted text.\n\t */\n\tcount?: number;\n\n\t/**\n\t * Placeholders to insert into the text. Replacing {{key}} with the specified value if the \"key\".\n\t */\n\tplaceholders?: { [K: string]: string };\n}\n\nexport interface II18nService {\n\t/**\n\t * Adds a resource bundle for the specified language.\n\t * @param lng the language the bundle is for\n\t * @param translationMap the translations of the given language\n\t */\n\taddResourceBundle: (lng: Generic.I18n.Locale.ISO_639_1, translationMap: Generic.I18n.Map<string, string>) => void;\n\t/**\n\t * Determines a human-readable translated text for the given resource key.\n\t * @param key the resource key\n\t * @param options optional translation parameters\n\t * @returns the translated text\n\t */\n\ttranslate: (key: string, options?: ITranslationOptions) => string;\n}\n\nexport class I18nextService implements II18nService {\n\tprivate static instance: II18nService;\n\tprivate static namespace = 'KoliBri';\n\n\tprivate constructor() {}\n\n\tpublic static async createInstance(\n\t\tlng: Generic.I18n.Locale.ISO_639_1,\n\t\ttranslations?:\n\t\t\t| Generic.I18n.RegisterPatch<Generic.I18n.Locale.ISO_639_1, string, string>\n\t\t\t| Generic.I18n.RegisterPatch<Generic.I18n.Locale.ISO_639_1, string, string>[]\n\t\t\t| Set<Generic.I18n.RegisterPatch<Generic.I18n.Locale.ISO_639_1, string, string>>,\n\t): Promise<II18nService> {\n\t\tif (Array.isArray(translations)) {\n\t\t\ttranslations = new Set(translations);\n\t\t} else if (typeof translations === 'function') {\n\t\t\ttranslations = new Set([translations]);\n\t\t}\n\n\t\tI18nextService.instance = new I18nextService();\n\n\t\tif (!i18next.isInitialized) {\n\t\t\tawait i18next.init({\n\t\t\t\tns: [I18nextService.namespace],\n\t\t\t\tlng,\n\t\t\t});\n\t\t} else {\n\t\t\tawait i18next.loadNamespaces(I18nextService.namespace);\n\t\t}\n\n\t\tif (translations !== undefined) {\n\t\t\ttranslations.forEach((t) =>\n\t\t\t\tt((l, t) => {\n\t\t\t\t\tI18nextService.instance.addResourceBundle(l, t);\n\t\t\t\t\treturn l;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tpublic static addResourceBundle(lng: Generic.I18n.Locale.ISO_639_1, translationMap: Generic.I18n.Map<string, string>) {\n\t\ti18next.addResourceBundle(lng, I18nextService.namespace, translationMap, true);\n\t}\n\n\tpublic addResourceBundle(lng: Generic.I18n.Locale.ISO_639_1, translationMap: Generic.I18n.Map<string, string>) {\n\t\tI18nextService.addResourceBundle(lng, translationMap);\n\t}\n\n\tpublic translate(key: string, options?: ITranslationOptions) {\n\t\treturn i18next.t(key, {\n\t\t\tns: I18nextService.namespace,\n\t\t\tcount: options?.count,\n\t\t\t...options?.placeholders,\n\t\t});\n\t}\n}\n"]}