@import '../mixins/input-messages.scss';
@import '../mixins/rem';

@layer kol-theme-component {
	:host {
		font-family: var(--font-family);
	}

	/* INPUT */
	.kol-input {
		display: grid;
		align-items: center;
		justify-items: left;
		width: 100%;
		min-height: rem(44);

		&:not(.disabled) :is(.input, label) {
			cursor: pointer;
		}

		&.disabled .input {
			cursor: not-allowed;
		}

		&.default:not(.hide-label) {
			grid-template-columns: rem(24) auto;
			gap: 0.4em;
		}

		&.default[data-label-align='left']:not(.hide-label) {
			grid-template-columns: auto rem(24);
			gap: 0.4em;
		}

		&.switch:not(.hide-label) {
			grid-template-columns: rem(56) auto;
			gap: 0.4em;
		}

		&.switch[data-label-align='left']:not(.hide-label) {
			grid-template-columns: auto rem(56);
			gap: 0.4em;
		}

		> div.input {
			display: inherit;
			min-height: rem(44);
			order: 2;
			height: 100%;

			input {
				margin: rem(0);
			}
		}

		> label {
			order: 3;
			height: 100%;
			padding-top: rem(12);
			color: var(--color-black);
		}

		> .kol-alert-wc {
			order: 1;
			padding-top: 0.25em;
			grid-column: span 2 / auto;
		}

		&.error input:focus {
			outline-color: var(--color-red);
		}
	}

	input {
		order: 1;
		width: 100%;
		border-color: var(--color-grey);
		border-width: rem(2);
		border-style: solid;
		border-radius: rem(5);
		line-height: 1;
		font-size: rem(16);

		&:focus {
			border-color: var(--color-midnight);
		}

		&:hover {
			box-shadow: none;
		}

		&:active {
			box-shadow: none;
		}
	}

	kol-icon:hover ~ input,
	input:hover {
		border-color: var(--color-midnight);
	}

	/* CHECKBOX */
	.kol-input:not(.button) label span {
		margin-top: rem(2);
	}

	.required label > span::after {
		content: '*';
		padding-left: 0.125em;
	}

	.kol-input {
		input[type='checkbox'] {
			appearance: none;
			background-color: white;
			transition: 0.5s;

			&:before {
				content: '';
			}

			&:checked {
				background-color: var(--color-midnight);
				border-color: var(--color-midnight);
			}
		}

		&.default {
			.checkbox-container {
				justify-content: flex-start;
			}

			input[type='checkbox'] {
				border-radius: var(--border-radius);
				height: calc(6 * var(--spacing));
				min-width: calc(6 * var(--spacing));
				width: calc(6 * var(--spacing));

				&:indeterminate {
					background-color: var(--color-midnight);
					border-color: var(--color-midnight);
				}
			}

			.icon {
				display: flex;
				color: var(--color-white);
				margin: rem(-2) 0 0 rem(4);
				/* visually align */
			}
		}
	}

	.default {
		.icon::part(icon) {
			font-family: 'Material Symbols Rounded';
			font-weight: 900;
			margin-top: rem(1);
		}

		&.checked .icon::part(icon)::before {
			content: 'check';
		}

		&.indeterminate .icon::part(icon)::before {
			content: 'remove';
		}
	}

	/* SWITCH */
	:host .kol-input.switch {
		input[type='checkbox'] {
			min-width: 3.5em;
			width: 3.5em;
			background-color: var(--color-grey);
			border-width: 0;
			height: 1.5em;
			border-radius: 1.25em;
			position: relative;
			/* Visible with forced colors  */
			outline: transparent solid rem(1);

			&:before {
				transition: 0.5;
				width: 1.25em;
				height: 1.25em;
				left: calc(0.25em - rem(2));
				top: calc(0.25em - rem(2));
				border-radius: 1.25em;
				background-color: white;
				position: absolute;
			}

			&:checked {
				background-color: var(--color-midnight);

				&:before {
					transform: translateX(2em);
					--tw-bg-opacity: 1;
				}
			}

			&:indeterminate {
				--tw-bg-opacity: 1;

				&:before {
					transform: translateX(1em);
				}
			}
		}

		& .checkbox-input-element {
			display: block;
		}

		& .icon {
			width: 1.25em;
			height: 1.25em;
			left: rem(2);
			color: #000;

			&::part(icon) {
				font-family: 'Material Symbols Rounded';
				font-weight: 900;
			}

			&::part(icon)::before {
				content: 'add';
			}
		}

		&.checked .icon {
			transform: translate(2em, -50%);

			&::part(icon)::before {
				content: 'check';
			}
		}

		&.indeterminate .icon {
			transform: translate(1em, -50%);

			&::part(icon)::before {
				content: 'remove';
			}
		}
	}

	/* BUTTON BADGE */
	.kol-input.button {
		row-gap: rem(8);

		/* Outer, clickable, container for the checkbox */
		.checkbox-container {
			align-items: center;
			display: flex;
			min-height: rem(44);
			position: relative;
		}

		/* Inner, visual, element for the checkbox */
		.icon {
			background-color: var(--color-silver);
			border-bottom-left-radius: var(--border-radius);
			border-top-left-radius: var(--border-radius);
			height: auto;
			min-height: rem(32);
			min-width: rem(32);

			/* Stable position when paddings are changing */
			&::part(icon) {
				left: 50%;
				position: absolute;
				top: 50%;
				transform: translate(-50%, -50%);
			}

			@at-root .hide-label#{&} {
				border-top-right-radius: var(--border-radius);
				border-bottom-right-radius: var(--border-radius);
			}

			@at-root [data-label-align='left']:not(.hide-label)#{&} {
				border-bottom-left-radius: 0;
				border-top-left-radius: 0;
				border-bottom-right-radius: var(--border-radius);
				border-top-right-radius: var(--border-radius);
			}
		}

		/* Outer, clickable, container for the label */
		.input-label {
			align-items: center;
			display: flex;
			min-height: rem(44);
			width: 100%;
			padding-top: 0;
		}

		/* Inner, visual, element for the label */
		.input-label-span {
			align-items: center;
			background-color: var(--color-silver);
			border-bottom-right-radius: var(--border-radius);
			border-top-right-radius: var(--border-radius);
			display: flex;
			min-height: rem(32);
			padding-right: rem(12);
			width: 100%;

			@at-root [data-label-align='left']:not(.hide-label)#{&} {
				border-bottom-right-radius: 0;
				border-top-right-radius: 0;
				border-bottom-left-radius: var(--border-radius);
				border-top-left-radius: var(--border-radius);
				padding-left: rem(12);
			}
		}

		/* States */
		&.checked .icon,
		&.checked .input-label-span {
			background-color: var(--color-ice);
		}

		&:not(.disabled):hover .icon,
		&:not(.disabled):hover .input-label-span {
			background-color: var(--color-midnight);
			color: var(--color-silver);
		}

		&:focus-within {
			outline: none;

			.icon,
			.input-label-span {
				min-height: rem(34);
				border: rem(3) solid var(--color-ocean);
				background-clip: content-box; // emulate outline with offset
				padding: rem(2);
			}
		}

		&:focus-within:not(.hide-label) {
			.icon {
				border-right: none;
				padding-right: 0;
			}

			.input-label-span {
				border-left: none;
				padding-left: 0;
			}
		}

		&[data-label-align='left']:focus-within:not(.hide-label) {
			.icon {
				border-right: rem(3) solid var(--color-ocean);
				padding-right: rem(2);
				border-left: none;
				padding-left: 0;
			}

			.input-label-span {
				border-left: rem(3) solid var(--color-ocean);
				padding-left: rem(2);
				border-right: none;
				padding-right: 0;
			}
		}
	}

	@include inputMessages;
}
