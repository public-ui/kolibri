name: CI-Pipeline

on:
  pull_request:
  push:
    branches:
      - 'develop'
      - 'main'
      - 'release/*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      # - uses: pnpm/action-setup@v2.2.4
      #   with:
      #     run_install: false
      #     version: 7
      # - uses: actions/setup-node@v3
      #   with:
      #     cache: pnpm
      #     node-version: 16

      # https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          # cache: pnpm
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Unused
        run: pnpm -r unused
      - name: Depcheck
        run: pnpm -r depcheck
      - name: Format
        run: pnpm -r format
      - name: Build
        run: pnpm -r build
      - name: Lint
        run: pnpm -r lint
      - name: Test
        run: pnpm -r --workspace-concurrency=1 test # https://pnpm.io/configuring

      - uses: actions/upload-artifact@v3
        if: failure()
        name: Upload theme test reports
        with:
          name: reports
          path: |
            packages/themes/**/test-results/**/*.png
            !**/node_modules
